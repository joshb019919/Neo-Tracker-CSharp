// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Neo_Tracker_C_.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NeoTracker.Migrations
{
    [DbContext(typeof(NeoTrackerDbContext))]
    [Migration("20250819190238_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Neo_Tracker_C_.Models.NearEarthObject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("AbsoluteMagnitudeH")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CloseApproachDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("EstimatedDiameterMax")
                        .HasColumnType("double precision");

                    b.Property<double>("EstimatedDiameterMin")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsPotentiallyHazardousAsteroid")
                        .HasColumnType("boolean");

                    b.Property<double>("MissDistance")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OrbitingBody")
                        .HasColumnType("text");

                    b.Property<double>("RelativeVelocity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("NearEarthObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
